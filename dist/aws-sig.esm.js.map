{"version":3,"file":"aws-sig.esm.js","sources":["../src/crypto-es/core.js","../src/crypto-es/hmac.js","../src/crypto-es/sha256.js","../src/hash.js","../src/encode.js","../src/request/query.js","../src/request/headers.js","../src/request/path.js","../src/request/request.js","../src/stringtosign.js","../src/signature.js","../src/validate.js","../src/authorization.js","../src/index.js"],"sourcesContent":["/**\r\n * CryptoJS core components.\r\n */\r\n/*\r\n\t* Local polyfil of Object.create\r\n\t*/\r\nvar create = Object.create || (function () {\r\n\tfunction F() {};\r\n\r\n\treturn function (obj) {\r\n\t\tvar subtype;\r\n\r\n\t\tF.prototype = obj;\r\n\r\n\t\tsubtype = new F();\r\n\r\n\t\tF.prototype = null;\r\n\r\n\t\treturn subtype;\r\n\t};\r\n}())\r\n\r\n/**\r\n * CryptoJS namespace.\r\n */\r\nvar C = {};\r\n\r\n/**\r\n * Library namespace.\r\n */\r\nvar C_lib = C.lib = {};\r\n\r\n/**\r\n * Base object for prototypal inheritance.\r\n */\r\nvar Base = C_lib.Base = (function () {\r\n\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Creates a new object that inherits from this object.\r\n\t\t *\r\n\t\t * @param {Object} overrides Properties to copy into the new object.\r\n\t\t *\r\n\t\t * @return {Object} The new object.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var MyType = CryptoJS.lib.Base.extend({\r\n\t\t *         field: 'value',\r\n\t\t *\r\n\t\t *         method: function () {\r\n\t\t *         }\r\n\t\t *     });\r\n\t\t */\r\n\t\textend: function (overrides) {\r\n\t\t\t// Spawn\r\n\t\t\tvar subtype = create(this);\r\n\r\n\t\t\t// Augment\r\n\t\t\tif (overrides) {\r\n\t\t\t\tsubtype.mixIn(overrides);\r\n\t\t\t}\r\n\r\n\t\t\t// Create default initializer\r\n\t\t\tif (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\r\n\t\t\t\tsubtype.init = function () {\r\n\t\t\t\t\tsubtype.$super.init.apply(this, arguments);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// Initializer's prototype is the subtype object\r\n\t\t\tsubtype.init.prototype = subtype;\r\n\r\n\t\t\t// Reference supertype\r\n\t\t\tsubtype.$super = this;\r\n\r\n\t\t\treturn subtype;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Extends this object and runs the init method.\r\n\t\t * Arguments to create() will be passed to init().\r\n\t\t *\r\n\t\t * @return {Object} The new object.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var instance = MyType.create();\r\n\t\t */\r\n\t\tcreate: function () {\r\n\t\t\tvar instance = this.extend();\r\n\t\t\tinstance.init.apply(instance, arguments);\r\n\r\n\t\t\treturn instance;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Initializes a newly created object.\r\n\t\t * Override this method to add some logic when your objects are created.\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var MyType = CryptoJS.lib.Base.extend({\r\n\t\t *         init: function () {\r\n\t\t *             // ...\r\n\t\t *         }\r\n\t\t *     });\r\n\t\t */\r\n\t\tinit: function () {\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Copies properties into this object.\r\n\t\t *\r\n\t\t * @param {Object} properties The properties to mix in.\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     MyType.mixIn({\r\n\t\t *         field: 'value'\r\n\t\t *     });\r\n\t\t */\r\n\t\tmixIn: function (properties) {\r\n\t\t\tfor (var propertyName in properties) {\r\n\t\t\t\tif (properties.hasOwnProperty(propertyName)) {\r\n\t\t\t\t\tthis[propertyName] = properties[propertyName];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// IE won't copy toString using the loop above\r\n\t\t\tif (properties.hasOwnProperty('toString')) {\r\n\t\t\t\tthis.toString = properties.toString;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Creates a copy of this object.\r\n\t\t *\r\n\t\t * @return {Object} The clone.\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var clone = instance.clone();\r\n\t\t */\r\n\t\tclone: function () {\r\n\t\t\treturn this.init.prototype.extend(this);\r\n\t\t}\r\n\t};\r\n}());\r\n\r\n/**\r\n * An array of 32-bit words.\r\n *\r\n * @property {Array} words The array of 32-bit words.\r\n * @property {number} sigBytes The number of significant bytes in this word array.\r\n */\r\nvar WordArray = C_lib.WordArray = Base.extend({\r\n\t/**\r\n\t * Initializes a newly created word array.\r\n\t *\r\n\t * @param {Array} words (Optional) An array of 32-bit words.\r\n\t * @param {number} sigBytes (Optional) The number of significant bytes in the words.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var wordArray = CryptoJS.lib.WordArray.create();\r\n\t *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\r\n\t *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\r\n\t */\r\n\tinit: function (words, sigBytes) {\r\n\t\twords = this.words = words || [];\r\n\r\n\t\tif (sigBytes != undefined) {\r\n\t\t\tthis.sigBytes = sigBytes;\r\n\t\t} else {\r\n\t\t\tthis.sigBytes = words.length * 4;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Converts this word array to a string.\r\n\t *\r\n\t * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\r\n\t *\r\n\t * @return {string} The stringified word array.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var string = wordArray + '';\r\n\t *     var string = wordArray.toString();\r\n\t *     var string = wordArray.toString(CryptoJS.enc.Utf8);\r\n\t */\r\n\ttoString: function (encoder) {\r\n\t\treturn (encoder || Hex).stringify(this);\r\n\t},\r\n\r\n\t/**\r\n\t * Concatenates a word array to this word array.\r\n\t *\r\n\t * @param {WordArray} wordArray The word array to append.\r\n\t *\r\n\t * @return {WordArray} This word array.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     wordArray1.concat(wordArray2);\r\n\t */\r\n\tconcat: function (wordArray) {\r\n\t\t// Shortcuts\r\n\t\tvar thisWords = this.words;\r\n\t\tvar thatWords = wordArray.words;\r\n\t\tvar thisSigBytes = this.sigBytes;\r\n\t\tvar thatSigBytes = wordArray.sigBytes;\r\n\r\n\t\t// Clamp excess bits\r\n\t\tthis.clamp();\r\n\r\n\t\t// Concat\r\n\t\tif (thisSigBytes % 4) {\r\n\t\t\t// Copy one byte at a time\r\n\t\t\tfor (var i = 0; i < thatSigBytes; i++) {\r\n\t\t\t\tvar thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n\t\t\t\tthisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Copy one word at a time\r\n\t\t\tfor (var i = 0; i < thatSigBytes; i += 4) {\r\n\t\t\t\tthisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.sigBytes += thatSigBytes;\r\n\r\n\t\t// Chainable\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Removes insignificant bits.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     wordArray.clamp();\r\n\t */\r\n\tclamp: function () {\r\n\t\t// Shortcuts\r\n\t\tvar words = this.words;\r\n\t\tvar sigBytes = this.sigBytes;\r\n\r\n\t\t// Clamp\r\n\t\twords[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\r\n\t\twords.length = Math.ceil(sigBytes / 4);\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a copy of this word array.\r\n\t *\r\n\t * @return {WordArray} The clone.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var clone = wordArray.clone();\r\n\t */\r\n\tclone: function () {\r\n\t\tvar clone = Base.clone.call(this);\r\n\t\tclone.words = this.words.slice(0);\r\n\r\n\t\treturn clone;\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a word array filled with random bytes.\r\n\t *\r\n\t * @param {number} nBytes The number of random bytes to generate.\r\n\t *\r\n\t * @return {WordArray} The random word array.\r\n\t *\r\n\t * @static\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var wordArray = CryptoJS.lib.WordArray.random(16);\r\n\t */\r\n\trandom: function (nBytes) {\r\n\t\tvar words = [];\r\n\r\n\t\tvar r = (function (m_w) {\r\n\t\t\tvar m_w = m_w;\r\n\t\t\tvar m_z = 0x3ade68b1;\r\n\t\t\tvar mask = 0xffffffff;\r\n\r\n\t\t\treturn function () {\r\n\t\t\t\tm_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\r\n\t\t\t\tm_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\r\n\t\t\t\tvar result = ((m_z << 0x10) + m_w) & mask;\r\n\t\t\t\tresult /= 0x100000000;\r\n\t\t\t\tresult += 0.5;\r\n\t\t\t\treturn result * (Math.random() > .5 ? 1 : -1);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfor (var i = 0, rcache; i < nBytes; i += 4) {\r\n\t\t\tvar _r = r((rcache || Math.random()) * 0x100000000);\r\n\r\n\t\t\trcache = _r() * 0x3ade67b7;\r\n\t\t\twords.push((_r() * 0x100000000) | 0);\r\n\t\t}\r\n\r\n\t\treturn new WordArray.init(words, nBytes);\r\n\t}\r\n});\r\n\r\n/**\r\n * Encoder namespace.\r\n */\r\nvar C_enc = C.enc = {};\r\n\r\n/**\r\n * Hex encoding strategy.\r\n */\r\nvar Hex = C_enc.Hex = {\r\n\t/**\r\n\t * Converts a word array to a hex string.\r\n\t *\r\n\t * @param {WordArray} wordArray The word array.\r\n\t *\r\n\t * @return {string} The hex string.\r\n\t *\r\n\t * @static\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\r\n\t */\r\n\tstringify: function (wordArray) {\r\n\t\t// Shortcuts\r\n\t\tvar words = wordArray.words;\r\n\t\tvar sigBytes = wordArray.sigBytes;\r\n\r\n\t\t// Convert\r\n\t\tvar hexChars = [];\r\n\t\tfor (var i = 0; i < sigBytes; i++) {\r\n\t\t\tvar bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n\t\t\thexChars.push((bite >>> 4).toString(16));\r\n\t\t\thexChars.push((bite & 0x0f).toString(16));\r\n\t\t}\r\n\r\n\t\treturn hexChars.join('');\r\n\t},\r\n\r\n\t/**\r\n\t * Converts a hex string to a word array.\r\n\t *\r\n\t * @param {string} hexStr The hex string.\r\n\t *\r\n\t * @return {WordArray} The word array.\r\n\t *\r\n\t * @static\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\r\n\t */\r\n\tparse: function (hexStr) {\r\n\t\t// Shortcut\r\n\t\tvar hexStrLength = hexStr.length;\r\n\r\n\t\t// Convert\r\n\t\tvar words = [];\r\n\t\tfor (var i = 0; i < hexStrLength; i += 2) {\r\n\t\t\twords[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\r\n\t\t}\r\n\r\n\t\treturn new WordArray.init(words, hexStrLength / 2);\r\n\t}\r\n};\r\n\r\n/**\r\n * Latin1 encoding strategy.\r\n */\r\nvar Latin1 = C_enc.Latin1 = {\r\n\t/**\r\n\t * Converts a word array to a Latin1 string.\r\n\t *\r\n\t * @param {WordArray} wordArray The word array.\r\n\t *\r\n\t * @return {string} The Latin1 string.\r\n\t *\r\n\t * @static\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\r\n\t */\r\n\tstringify: function (wordArray) {\r\n\t\t// Shortcuts\r\n\t\tvar words = wordArray.words;\r\n\t\tvar sigBytes = wordArray.sigBytes;\r\n\r\n\t\t// Convert\r\n\t\tvar latin1Chars = [];\r\n\t\tfor (var i = 0; i < sigBytes; i++) {\r\n\t\t\tvar bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n\t\t\tlatin1Chars.push(String.fromCharCode(bite));\r\n\t\t}\r\n\r\n\t\treturn latin1Chars.join('');\r\n\t},\r\n\r\n\t/**\r\n\t * Converts a Latin1 string to a word array.\r\n\t *\r\n\t * @param {string} latin1Str The Latin1 string.\r\n\t *\r\n\t * @return {WordArray} The word array.\r\n\t *\r\n\t * @static\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\r\n\t */\r\n\tparse: function (latin1Str) {\r\n\t\t// Shortcut\r\n\t\tvar latin1StrLength = latin1Str.length;\r\n\r\n\t\t// Convert\r\n\t\tvar words = [];\r\n\t\tfor (var i = 0; i < latin1StrLength; i++) {\r\n\t\t\twords[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\r\n\t\t}\r\n\r\n\t\treturn new WordArray.init(words, latin1StrLength);\r\n\t}\r\n};\r\n\r\n/**\r\n * UTF-8 encoding strategy.\r\n */\r\nvar Utf8 = C_enc.Utf8 = {\r\n\t/**\r\n\t * Converts a word array to a UTF-8 string.\r\n\t *\r\n\t * @param {WordArray} wordArray The word array.\r\n\t *\r\n\t * @return {string} The UTF-8 string.\r\n\t *\r\n\t * @static\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\r\n\t */\r\n\tstringify: function (wordArray) {\r\n\t\ttry {\r\n\t\t\treturn decodeURIComponent(escape(Latin1.stringify(wordArray)));\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error('Malformed UTF-8 data');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Converts a UTF-8 string to a word array.\r\n\t *\r\n\t * @param {string} utf8Str The UTF-8 string.\r\n\t *\r\n\t * @return {WordArray} The word array.\r\n\t *\r\n\t * @static\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\r\n\t */\r\n\tparse: function (utf8Str) {\r\n\t\treturn Latin1.parse(unescape(encodeURIComponent(utf8Str)));\r\n\t}\r\n};\r\n\r\n/**\r\n * Abstract buffered block algorithm template.\r\n *\r\n * The property blockSize must be implemented in a concrete subtype.\r\n *\r\n * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\r\n */\r\nvar BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\r\n\t/**\r\n\t * Resets this block algorithm's data buffer to its initial state.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     bufferedBlockAlgorithm.reset();\r\n\t */\r\n\treset: function () {\r\n\t\t// Initial values\r\n\t\tthis._data = new WordArray.init();\r\n\t\tthis._nDataBytes = 0;\r\n\t},\r\n\r\n\t/**\r\n\t * Adds new data to this block algorithm's buffer.\r\n\t *\r\n\t * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     bufferedBlockAlgorithm._append('data');\r\n\t *     bufferedBlockAlgorithm._append(wordArray);\r\n\t */\r\n\t_append: function (data) {\r\n\t\t// Convert string to WordArray, else assume WordArray already\r\n\t\tif (typeof data == 'string') {\r\n\t\t\tdata = Utf8.parse(data);\r\n\t\t}\r\n\r\n\t\t// Append\r\n\t\tthis._data.concat(data);\r\n\t\tthis._nDataBytes += data.sigBytes;\r\n\t},\r\n\r\n\t/**\r\n\t * Processes available data blocks.\r\n\t *\r\n\t * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\r\n\t *\r\n\t * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\r\n\t *\r\n\t * @return {WordArray} The processed data.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var processedData = bufferedBlockAlgorithm._process();\r\n\t *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\r\n\t */\r\n\t_process: function (doFlush) {\r\n\t\t// Shortcuts\r\n\t\tvar data = this._data;\r\n\t\tvar dataWords = data.words;\r\n\t\tvar dataSigBytes = data.sigBytes;\r\n\t\tvar blockSize = this.blockSize;\r\n\t\tvar blockSizeBytes = blockSize * 4;\r\n\r\n\t\t// Count blocks ready\r\n\t\tvar nBlocksReady = dataSigBytes / blockSizeBytes;\r\n\t\tif (doFlush) {\r\n\t\t\t// Round up to include partial blocks\r\n\t\t\tnBlocksReady = Math.ceil(nBlocksReady);\r\n\t\t} else {\r\n\t\t\t// Round down to include only full blocks,\r\n\t\t\t// less the number of blocks that must remain in the buffer\r\n\t\t\tnBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\r\n\t\t}\r\n\r\n\t\t// Count words ready\r\n\t\tvar nWordsReady = nBlocksReady * blockSize;\r\n\r\n\t\t// Count bytes ready\r\n\t\tvar nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\r\n\r\n\t\t// Process blocks\r\n\t\tif (nWordsReady) {\r\n\t\t\tfor (var offset = 0; offset < nWordsReady; offset += blockSize) {\r\n\t\t\t\t// Perform concrete-algorithm logic\r\n\t\t\t\tthis._doProcessBlock(dataWords, offset);\r\n\t\t\t}\r\n\r\n\t\t\t// Remove processed words\r\n\t\t\tvar processedWords = dataWords.splice(0, nWordsReady);\r\n\t\t\tdata.sigBytes -= nBytesReady;\r\n\t\t}\r\n\r\n\t\t// Return processed words\r\n\t\treturn new WordArray.init(processedWords, nBytesReady);\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a copy of this object.\r\n\t *\r\n\t * @return {Object} The clone.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var clone = bufferedBlockAlgorithm.clone();\r\n\t */\r\n\tclone: function () {\r\n\t\tvar clone = Base.clone.call(this);\r\n\t\tclone._data = this._data.clone();\r\n\r\n\t\treturn clone;\r\n\t},\r\n\r\n\t_minBufferSize: 0\r\n});\r\n\r\n/**\r\n * Abstract hasher template.\r\n *\r\n * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\r\n */\r\nvar Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\r\n\t/**\r\n\t * Configuration options.\r\n\t */\r\n\tcfg: Base.extend(),\r\n\r\n\t/**\r\n\t * Initializes a newly created hasher.\r\n\t *\r\n\t * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var hasher = CryptoJS.algo.SHA256.create();\r\n\t */\r\n\tinit: function (cfg) {\r\n\t\t// Apply config defaults\r\n\t\tthis.cfg = this.cfg.extend(cfg);\r\n\r\n\t\t// Set initial values\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/**\r\n\t * Resets this hasher to its initial state.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     hasher.reset();\r\n\t */\r\n\treset: function () {\r\n\t\t// Reset data buffer\r\n\t\tBufferedBlockAlgorithm.reset.call(this);\r\n\r\n\t\t// Perform concrete-hasher logic\r\n\t\tthis._doReset();\r\n\t},\r\n\r\n\t/**\r\n\t * Updates this hasher with a message.\r\n\t *\r\n\t * @param {WordArray|string} messageUpdate The message to append.\r\n\t *\r\n\t * @return {Hasher} This hasher.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     hasher.update('message');\r\n\t *     hasher.update(wordArray);\r\n\t */\r\n\tupdate: function (messageUpdate) {\r\n\t\t// Append\r\n\t\tthis._append(messageUpdate);\r\n\r\n\t\t// Update the hash\r\n\t\tthis._process();\r\n\r\n\t\t// Chainable\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Finalizes the hash computation.\r\n\t * Note that the finalize operation is effectively a destructive, read-once operation.\r\n\t *\r\n\t * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n\t *\r\n\t * @return {WordArray} The hash.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var hash = hasher.finalize();\r\n\t *     var hash = hasher.finalize('message');\r\n\t *     var hash = hasher.finalize(wordArray);\r\n\t */\r\n\tfinalize: function (messageUpdate) {\r\n\t\t// Final message update\r\n\t\tif (messageUpdate) {\r\n\t\t\tthis._append(messageUpdate);\r\n\t\t}\r\n\r\n\t\t// Perform concrete-hasher logic\r\n\t\tvar hash = this._doFinalize();\r\n\r\n\t\treturn hash;\r\n\t},\r\n\r\n\tblockSize: 512/32,\r\n\r\n\t/**\r\n\t * Creates a shortcut function to a hasher's object interface.\r\n\t *\r\n\t * @param {Hasher} hasher The hasher to create a helper for.\r\n\t *\r\n\t * @return {Function} The shortcut function.\r\n\t *\r\n\t * @static\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\r\n\t */\r\n\t_createHelper: function (hasher) {\r\n\t\treturn function (message, cfg) {\r\n\t\t\treturn new hasher.init(cfg).finalize(message);\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t * Creates a shortcut function to the HMAC's object interface.\r\n\t *\r\n\t * @param {Hasher} hasher The hasher to use in this HMAC helper.\r\n\t *\r\n\t * @return {Function} The shortcut function.\r\n\t *\r\n\t * @static\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\r\n\t */\r\n\t_createHmacHelper: function (hasher) {\r\n\t\treturn function (message, key) {\r\n\t\t\treturn new C_algo.HMAC.init(hasher, key).finalize(message);\r\n\t\t};\r\n\t}\r\n});\r\n\r\n/**\r\n * Algorithm namespace.\r\n */\r\nvar C_algo = C.algo = {};\r\n\r\nexport default C;\r\n","import Crypto from \"./core.js\";\r\n\r\n// Shortcuts\r\nvar C = Crypto;\r\nvar C_lib = C.lib;\r\nvar Base = C_lib.Base;\r\nvar C_enc = C.enc;\r\nvar Utf8 = C_enc.Utf8;\r\nvar C_algo = C.algo;\r\n\r\n/**\r\n * HMAC algorithm.\r\n */\r\nvar HMAC = C_algo.HMAC = Base.extend({\r\n\t/**\r\n\t * Initializes a newly created HMAC.\r\n\t *\r\n\t * @param {Hasher} hasher The hash algorithm to use.\r\n\t * @param {WordArray|string} key The secret key.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\r\n\t */\r\n\tinit: function (hasher, key) {\r\n\t\t// Init hasher\r\n\t\thasher = this._hasher = new hasher.init();\r\n\r\n\t\t// Convert string to WordArray, else assume WordArray already\r\n\t\tif (typeof key == 'string') {\r\n\t\t\tkey = Utf8.parse(key);\r\n\t\t}\r\n\r\n\t\t// Shortcuts\r\n\t\tvar hasherBlockSize = hasher.blockSize;\r\n\t\tvar hasherBlockSizeBytes = hasherBlockSize * 4;\r\n\r\n\t\t// Allow arbitrary length keys\r\n\t\tif (key.sigBytes > hasherBlockSizeBytes) {\r\n\t\t\tkey = hasher.finalize(key);\r\n\t\t}\r\n\r\n\t\t// Clamp excess bits\r\n\t\tkey.clamp();\r\n\r\n\t\t// Clone key for inner and outer pads\r\n\t\tvar oKey = this._oKey = key.clone();\r\n\t\tvar iKey = this._iKey = key.clone();\r\n\r\n\t\t// Shortcuts\r\n\t\tvar oKeyWords = oKey.words;\r\n\t\tvar iKeyWords = iKey.words;\r\n\r\n\t\t// XOR keys with pad constants\r\n\t\tfor (var i = 0; i < hasherBlockSize; i++) {\r\n\t\t\toKeyWords[i] ^= 0x5c5c5c5c;\r\n\t\t\tiKeyWords[i] ^= 0x36363636;\r\n\t\t}\r\n\t\toKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\r\n\r\n\t\t// Set initial values\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/**\r\n\t * Resets this HMAC to its initial state.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     hmacHasher.reset();\r\n\t */\r\n\treset: function () {\r\n\t\t// Shortcut\r\n\t\tvar hasher = this._hasher;\r\n\r\n\t\t// Reset\r\n\t\thasher.reset();\r\n\t\thasher.update(this._iKey);\r\n\t},\r\n\r\n\t/**\r\n\t * Updates this HMAC with a message.\r\n\t *\r\n\t * @param {WordArray|string} messageUpdate The message to append.\r\n\t *\r\n\t * @return {HMAC} This HMAC instance.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     hmacHasher.update('message');\r\n\t *     hmacHasher.update(wordArray);\r\n\t */\r\n\tupdate: function (messageUpdate) {\r\n\t\tthis._hasher.update(messageUpdate);\r\n\r\n\t\t// Chainable\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Finalizes the HMAC computation.\r\n\t * Note that the finalize operation is effectively a destructive, read-once operation.\r\n\t *\r\n\t * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n\t *\r\n\t * @return {WordArray} The HMAC.\r\n\t *\r\n\t * @example\r\n\t *\r\n\t *     var hmac = hmacHasher.finalize();\r\n\t *     var hmac = hmacHasher.finalize('message');\r\n\t *     var hmac = hmacHasher.finalize(wordArray);\r\n\t */\r\n\tfinalize: function (messageUpdate) {\r\n\t\t// Shortcut\r\n\t\tvar hasher = this._hasher;\r\n\r\n\t\t// Compute HMAC\r\n\t\tvar innerHash = hasher.finalize(messageUpdate);\r\n\t\thasher.reset();\r\n\t\tvar hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\r\n\r\n\t\treturn hmac;\r\n\t}\r\n});\r\n","import Crypto from \"./core.js\";\r\nimport \"./hmac.js\";\r\n\r\n// Shortcuts\r\nvar C = Crypto;\r\nvar C_lib = C.lib;\r\nvar WordArray = C_lib.WordArray;\r\nvar Hasher = C_lib.Hasher;\r\nvar C_algo = C.algo;\r\n\r\n// Initialization and round constants tables\r\nvar H = [];\r\nvar K = [];\r\n\r\n// Compute constants\r\n(function () {\r\n\tfunction isPrime(n) {\r\n\t\tvar sqrtN = Math.sqrt(n);\r\n\t\tfor (var factor = 2; factor <= sqrtN; factor++) {\r\n\t\t\tif (!(n % factor)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getFractionalBits(n) {\r\n\t\treturn ((n - (n | 0)) * 0x100000000) | 0;\r\n\t}\r\n\r\n\tvar n = 2;\r\n\tvar nPrime = 0;\r\n\twhile (nPrime < 64) {\r\n\t\tif (isPrime(n)) {\r\n\t\t\tif (nPrime < 8) {\r\n\t\t\t\tH[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\r\n\t\t\t}\r\n\t\t\tK[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\r\n\r\n\t\t\tnPrime++;\r\n\t\t}\r\n\r\n\t\tn++;\r\n\t}\r\n}());\r\n\r\n// Reusable object\r\nvar W = [];\r\n\r\n/**\r\n * SHA-256 hash algorithm.\r\n */\r\nvar SHA256Hasher = C_algo.SHA256 = Hasher.extend({\r\n\t_doReset: function () {\r\n\t\tthis._hash = new WordArray.init(H.slice(0));\r\n\t},\r\n\r\n\t_doProcessBlock: function (M, offset) {\r\n\t\t// Shortcut\r\n\t\tvar H = this._hash.words;\r\n\r\n\t\t// Working variables\r\n\t\tvar a = H[0];\r\n\t\tvar b = H[1];\r\n\t\tvar c = H[2];\r\n\t\tvar d = H[3];\r\n\t\tvar e = H[4];\r\n\t\tvar f = H[5];\r\n\t\tvar g = H[6];\r\n\t\tvar h = H[7];\r\n\r\n\t\t// Computation\r\n\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\tif (i < 16) {\r\n\t\t\t\tW[i] = M[offset + i] | 0;\r\n\t\t\t} else {\r\n\t\t\t\tvar gamma0x = W[i - 15];\r\n\t\t\t\tvar gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\r\n\t\t\t\t\t\t\t\t((gamma0x << 14) | (gamma0x >>> 18)) ^\r\n\t\t\t\t\t\t\t\t(gamma0x >>> 3);\r\n\r\n\t\t\t\tvar gamma1x = W[i - 2];\r\n\t\t\t\tvar gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\r\n\t\t\t\t\t\t\t\t((gamma1x << 13) | (gamma1x >>> 19)) ^\r\n\t\t\t\t\t\t\t\t(gamma1x >>> 10);\r\n\r\n\t\t\t\tW[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\r\n\t\t\t}\r\n\r\n\t\t\tvar ch  = (e & f) ^ (~e & g);\r\n\t\t\tvar maj = (a & b) ^ (a & c) ^ (b & c);\r\n\r\n\t\t\tvar sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\r\n\t\t\tvar sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\r\n\r\n\t\t\tvar t1 = h + sigma1 + ch + K[i] + W[i];\r\n\t\t\tvar t2 = sigma0 + maj;\r\n\r\n\t\t\th = g;\r\n\t\t\tg = f;\r\n\t\t\tf = e;\r\n\t\t\te = (d + t1) | 0;\r\n\t\t\td = c;\r\n\t\t\tc = b;\r\n\t\t\tb = a;\r\n\t\t\ta = (t1 + t2) | 0;\r\n\t\t}\r\n\r\n\t\t// Intermediate hash value\r\n\t\tH[0] = (H[0] + a) | 0;\r\n\t\tH[1] = (H[1] + b) | 0;\r\n\t\tH[2] = (H[2] + c) | 0;\r\n\t\tH[3] = (H[3] + d) | 0;\r\n\t\tH[4] = (H[4] + e) | 0;\r\n\t\tH[5] = (H[5] + f) | 0;\r\n\t\tH[6] = (H[6] + g) | 0;\r\n\t\tH[7] = (H[7] + h) | 0;\r\n\t},\r\n\r\n\t_doFinalize: function () {\r\n\t\t// Shortcuts\r\n\t\tvar data = this._data;\r\n\t\tvar dataWords = data.words;\r\n\r\n\t\tvar nBitsTotal = this._nDataBytes * 8;\r\n\t\tvar nBitsLeft = data.sigBytes * 8;\r\n\r\n\t\t// Add padding\r\n\t\tdataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n\t\tdataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n\t\tdataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n\t\tdata.sigBytes = dataWords.length * 4;\r\n\r\n\t\t// Hash final blocks\r\n\t\tthis._process();\r\n\r\n\t\t// Return final computed hash\r\n\t\treturn this._hash;\r\n\t},\r\n\r\n\tclone: function () {\r\n\t\tvar clone = Hasher.clone.call(this);\r\n\t\tclone._hash = this._hash.clone();\r\n\r\n\t\treturn clone;\r\n\t}\r\n});\r\n\r\n/**\r\n * Shortcut function to the hasher's object interface.\r\n *\r\n * @param {WordArray|string} message The message to hash.\r\n *\r\n * @return {WordArray} The hash.\r\n *\r\n * @static\r\n *\r\n * @example\r\n *\r\n *     var hash = CryptoJS.SHA256('message');\r\n *     var hash = CryptoJS.SHA256(wordArray);\r\n */\r\nconst SHA256 = Hasher._createHelper(SHA256Hasher);\r\n\r\n/**\r\n * Shortcut function to the HMAC's object interface.\r\n *\r\n * @param {WordArray|string} message The message to hash.\r\n * @param {WordArray|string} key The secret key.\r\n *\r\n * @return {WordArray} The HMAC.\r\n *\r\n * @static\r\n *\r\n * @example\r\n *\r\n *     var hmac = CryptoJS.HmacSHA256(message, key);\r\n */\r\nconst HmacSHA256 = Hasher._createHmacHelper(SHA256Hasher);\r\n\r\nexport { SHA256, HmacSHA256 };\r\n","/* eslint-disable new-cap */\r\nimport { SHA256, HmacSHA256 } from \"./crypto-es/sha256.js\";\r\n\r\nconst hash = (str) =>\r\n    SHA256(str).toString();\r\n\r\nconst hmac = HmacSHA256;\r\n    \r\nexport { hmac, hash };\r\n","\"use strict\";\r\n\r\n// Replace one extra character beyond what encodeURIComponent does, \"*\"\r\n// See https://github.com/aws/aws-sdk-js/blob/38bf84c144281f696768e8c64500f2847fe6f298/lib/util.js#L39-L49\r\nconst encode = (str) =>\r\n    encodeURIComponent(str)\r\n    .replace(/[*]/g, (x) =>\r\n        // eslint-disable-next-line newline-per-chained-call\r\n        `%${x.charCodeAt(0).toString(16).toUpperCase()}`\r\n    );\r\n\r\nexport default encode;\r\n","import encode from \"../encode.js\";\r\n\r\nconst sort = (a, b) => a.localeCompare(b);\r\n\r\n// Sort query parameters by key\r\n// Then also sort by value because AWS\r\nexport default ({ url }) => {\r\n    const source = {};\r\n    const params = [];\r\n    \r\n    url.searchParams.forEach((value, key) => {\r\n        if(!source[key]) {\r\n            source[key] = [];\r\n        }\r\n\r\n        source[key].push(value);\r\n    });\r\n\r\n    Object.keys(source)\r\n        .sort(sort)\r\n        .forEach((key) => {\r\n            source[key]\r\n                .sort(sort)\r\n                .forEach((value) => {\r\n                    params.push(`${encode(key)}=${encode(value)}`);\r\n                });\r\n        });\r\n\r\n    return params.join(\"&\");\r\n};\r\n","const trim = (val) => {\r\n    return val\r\n        .toString()\r\n        .trim()\r\n        .replace(/\\s+/g, \" \");\r\n};\r\n\r\nconst values = (headers) => {\r\n    if(!headers.length) {\r\n        return \"\";\r\n    }\r\n\r\n    return headers\r\n        .map(([ key, vals ]) => {\r\n            return `${key}:${Array.isArray(vals) ? vals.map(trim).join(\",\") : trim(vals)}`;\r\n        })\r\n        .join(\"\\n\");\r\n};\r\n\r\nconst signed = (headers) => {\r\n    return headers\r\n        .map(([ key ]) => key)\r\n        .join(\";\");\r\n};\r\n\r\nconst sorted = ({ headers = {} }) => {\r\n    const out = Object.keys(headers).map((key) => [ key.toLowerCase(), headers[key] ]);\r\n\r\n    return out.sort(([ keya ], [ keyb ]) => keya.localeCompare(keyb));\r\n};\r\n\r\nexport { sorted, values, signed };\r\n","import encode from \"../encode.js\";\r\n\r\nconst multipleSlashesRegex = /\\/\\/+/g;\r\n\r\nexport default ({ service, url }) => {\r\n    // S3 doesn't use normalized paths at all\r\n    if(service === \"s3\") {\r\n        return url.pathname;\r\n    }\r\n    \r\n    return url.pathname\r\n        .replace(multipleSlashesRegex, \"/\")\r\n        .split(\"/\")\r\n        .map(encode)\r\n        .join(\"/\");\r\n};\r\n","import { hash } from \"../hash.js\";\r\n\r\nimport query from \"./query.js\";\r\nimport { values, signed } from \"./headers.js\";\r\nimport path from \"./path.js\";\r\n\r\nexport default (req) => {\r\n    const { method, body, sortedHeaders } = req;\r\n\r\n    // https://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html\r\n    return [\r\n        method.toUpperCase(),\r\n        \r\n        // Canonical Path\r\n        path(req),\r\n        \r\n        // Canonical Query\r\n        query(req),\r\n        \r\n        // Canonical Headers\r\n        values(sortedHeaders),\r\n\r\n        // Extra linebreak\r\n        \"\",\r\n\r\n        // Signed Headers\r\n        signed(sortedHeaders),\r\n\r\n        // Hashed payload\r\n        hash(typeof body === \"string\" ? body.trim() : body),\r\n    ].join(\"\\n\");\r\n};\r\n","import { hash } from \"./hash.js\";\r\n\r\n// https://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html\r\nexport default ({ algorithm, date, region, service }, canonical) => [\r\n        // Signing Function\r\n        algorithm,\r\n        \r\n        // Date Time\r\n        date.long,\r\n        \r\n        // Scope\r\n        `${date.short}/${region}/${service}/aws4_request`,\r\n        \r\n        // Signed canonical request\r\n        hash(canonical),\r\n    ].join(\"\\n\");\r\n","import { hmac } from \"./hash.js\";\r\n\r\n// https://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html\r\nexport default ({ date, secretAccessKey, region, service }, sts) => {\r\n    const kDate = hmac(date.short, `AWS4${secretAccessKey}`);\r\n    const kRegion = hmac(region, kDate);\r\n    const kService = hmac(service, kRegion);\r\n    const kSignature = hmac(\"aws4_request\", kService);\r\n\r\n    return hmac(sts, kSignature);\r\n};\r\n","const requestRequired = [\r\n    \"url\",\r\n];\r\n\r\nconst configRequired = [\r\n    \"accessKeyId\",\r\n    \"region\",\r\n    \"secretAccessKey\",\r\n    \"service\",\r\n];\r\n\r\n// Check for required params\r\nconst validate = (source, config) => {\r\n    if(!source) {\r\n        throw new Error(`Missing request object`);\r\n    }\r\n\r\n    if(!config) {\r\n        throw new Error(`Missing config object`);\r\n    }\r\n\r\n    let missing = requestRequired.filter((field) => !source[field]);\r\n\r\n    if(missing.length) {\r\n        throw new Error(`Missing required request fields: ${missing.join(\", \")}`);\r\n    }\r\n    \r\n    missing = configRequired.filter((field) => !config[field]);\r\n\r\n    if(missing.length) {\r\n        throw new Error(`Missing required config fields: ${missing.join(\", \")}`);\r\n    }\r\n};\r\n\r\nexport default validate;\r\n","import { signed } from \"./request/headers.js\";\r\n\r\nconst authorization = (req, sig) => {\r\n    const {\r\n        algorithm,\r\n        accessKeyId,\r\n        date,\r\n        region,\r\n        service,\r\n        sortedHeaders,\r\n    } = req;\r\n\r\n    return [\r\n        `${algorithm} Credential=${accessKeyId}/${date.short}/${region}/${service}/aws4_request`,\r\n        `SignedHeaders=${signed(sortedHeaders)}`,\r\n        `Signature=${sig}`,\r\n    ].join(\", \");\r\n};\r\n\r\nexport default authorization;\r\n","import testing from \"consts:testing\";\r\n\r\nimport request from \"./request/request.js\";\r\nimport { sorted } from \"./request/headers.js\";\r\nimport stringToSign from \"./stringtosign.js\";\r\nimport signature from \"./signature.js\";\r\nimport validate from \"./validate.js\";\r\nimport authorization from \"./authorization.js\";\r\n\r\nconst dateCleanRegex = /[:\\-]|\\.\\d{3}/g;\r\n\r\nconst parseDate = ({ headers }) => {\r\n    const datetime = \"X-Amz-Date\" in headers ?\r\n        headers[\"X-Amz-Date\"] :\r\n        (new Date(headers.Date || Date.now()))\r\n            .toISOString()\r\n            .replace(dateCleanRegex, \"\");\r\n\r\n    return {\r\n        short : datetime.split(\"T\")[0],\r\n        long  : datetime,\r\n    };\r\n};\r\n\r\nexport default (source, config) => {\r\n    validate(source, config);\r\n\r\n    if(!source.headers) {\r\n        source.headers = {};\r\n    }\r\n\r\n    const details = Object.assign(\r\n        Object.create(null),\r\n        {\r\n            method : \"GET\",\r\n        },\r\n        source,\r\n        config,\r\n        {\r\n            url           : new URL(source.url),\r\n            algorithm     : \"AWS4-HMAC-SHA256\",\r\n            date          : parseDate(source),\r\n            sortedHeaders : sorted(source),\r\n        }\r\n    );\r\n\r\n    const canonical = request(details);\r\n    const sts = stringToSign(details, canonical);\r\n    const sig = signature(details, sts);\r\n    const auth = authorization(details, sig);\r\n\r\n    source.headers[\"X-Amz-Date\"] = details.date.long;\r\n    \r\n    if(config.sessionToken) {\r\n        source.headers[\"X-Amz-Security-Token\"] = config.sessionToken;\r\n    }\r\n    \r\n    source.headers.Authorization = auth;\r\n\r\n    // Add partial output to response for tests so each step can be validated\r\n    /* istanbul ignore next */\r\n    if(testing) {\r\n        source.test = {\r\n            canonical,\r\n            sts,\r\n            auth,\r\n        };\r\n    }\r\n\r\n    return source;\r\n};\r\n"],"names":["C","Crypto","C_lib","Base","C_enc","Utf8","C_algo","WordArray","Hasher"],"mappings":"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"}